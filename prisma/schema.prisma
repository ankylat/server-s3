datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  privyId                       String            @id
  email                         String?
  createdAt                     DateTime          @default(now())
  lastLogin                     DateTime?
  streak                        Int               @default(0)
  longestStreak                 Int?              @default(0)
  writingSessions               WritingSession[]
  newenBalance                  Int               @default(0)
  totalNewenEarned              Int               @default(0)
  Newen                         Newen[]
  NewenTransaction              NewenTransaction[]
  lastNotified                  DateTime?
  wroteToday                    Boolean        @default(false)
  todayCid                      String?
  ankyMentorIndex               Int?
  ankyverseDay                  Int?
  walletAddress                 String?
}

model Emails {
  id            Int @id @default(autoincrement())
  email         String?
}

model Newen {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [privyId])
  userId   String
  amount   Int
  earnedAt DateTime @default(now())
}

model NewenTransaction {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [privyId])
  userId    String
  amount    Int
  type      String // "earned"
  createdAt DateTime @default(now())
  cid       String?
  mentorIndex   Int?
}

model WritingSession {
  id                  String   @id @default(uuid())
  user                User     @relation(fields: [userId], references: [privyId])
  userId              String
  startTime           DateTime
  endTime             DateTime?
  newenEarned         Int?
  writingCID          String?
  status              String?
  randomUUID          String?
  flag                Boolean @default(false)
  mentorIndex         Int?
  walletAddress       String?
  ankyverseDay        Int?
  text                String?
}

model AnkyMentors {
  id                   String   @id @default(uuid())
  mentorIndex          Int?  @unique
  owner                String?
  ankyverseDay         Int?
  createdAt DateTime   @default(now())
  wroteToday           Boolean @default(false)
  changeCount   Int      @default(0)
}